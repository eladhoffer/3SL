_target_: src.data.data.DataModule
train:
  name: imagenet
  split: train
  path: ${data_dir}
  normalize:
    _target_: src.data.transforms.Normalize
    mean: [0.485, 0.456, 0.406]
    std: [0.229, 0.224, 0.225]
  transform:
    _target_: src.data.transforms.Compose
    transforms:
      - _target_: src.data.transforms.RandomResizedCrop
        size: 224
      - _target_: src.data.transforms.RandomHorizontalFlip
      - _target_: src.data.transforms.ToTensor
      - ${data.train.normalize}
  loader:
    batch_size: ${batch_size}
    shuffle: true
    num_workers: 1
    drop_last: true
    pin_memory: false
val:
  name: ${data.train.name}
  split: eval
  path: ${data.train.path}
  loader:
    batch_size: ${batch_size}
    shuffle: false
    num_workers: 1
    drop_last: false
    pin_memory: false
  transform:
    _target_: src.data.transforms.Compose
    transforms:
      - _target_: src.data.transforms.Resize
        size: 256
      - _target_: src.data.transforms.CenterCrop
        size: 224        
      - _target_: src.data.transforms.ToTensor
      - ${data.train.normalize}
