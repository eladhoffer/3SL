# @package _global_

# to execute this experiment run:
# python run.py experiment=resnet50_imagenet.yaml

defaults:
  - override /trainer: ddp.yaml # choose trainer from 'configs/trainer/'
  - override /task: default.yaml
  - override /data: imagenet_dali.yaml
  - override /callbacks: default.yaml
  - override /logger: many_loggers.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

seed: 12345
batch_size: 64
resume: null

trainer:
  max_epochs: 35
  gpus: 4
  precision: 16
  benchmark: true

task:
  _target_: src.tasks.supervised.ClassificationTask
  model:
    _target_: torchvision.models.resnet50
  label_smoothing: 0.1
  optimizer:
    _target_: src.optim.OptimConfig.instantiate
    optimizer:
      _target_: pl_bolts.optimizers.lars.LARS
      lr: 1.0
      momentum: 0.9
      weight_decay: 0.0002
      nesterov: false
      trust_coefficient: 0.001
      eps: 1e-8
    lr_scheduler:
      _target_: src.optim.scheduler.PolynomialWarmUpDecay
      lr: ${task.optimizer.optimizer.lr}
      warmup_steps: 25022
      total_steps: 175159
      init_lr: 0.
      final_lr: 0.0001
      decay_power: 2.0
    interval: step