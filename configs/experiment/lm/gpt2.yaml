# @package _global_

# to execute this experiment run:
# python run.py experiment=roberta_base.yaml

defaults:
  - override /trainer: fsdp.yaml # choose trainer from 'configs/trainer/'
  - override /task: default.yaml
  - override /data: textblock.yaml
  - override /callbacks: default.yaml
  - override /logger: many_loggers.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

seed: 12345
batch_size: 16
resume: null

trainer:
  max_steps: 125000
  max_epochs: ${trainer.max_steps}
  devices: 4
  precision: bf16
  accumulate_grad_batches: 5
  val_check_interval: 4000
  strategy: 
    use_orig_params: true

task:
  _target_: src.tasks.text.LanguageModelTask
  model:
    _target_: transformers.GPT2LMHeadModel
    config:
      _target_: transformers.GPT2Config
      vocab_size: 50304
      resid_pdrop: 0
      embd_pdrop: 0
      attn_pdrop: 0     
      use_cache: false 
      tie_word_embeddings: true
  compile_model: true
  enable_tf32: true
  optimizer:
    _target_: src.optim.OptimConfig.instantiate
    optimizer:
      _target_: torch.optim.AdamW
      betas:
        - 0.9
        - 0.95
      eps: 1e-6
      weight_decay: 0.01
      lr: 6e-4
    optimizer_filters:
      - filter:
          _target_: src.optim.filter.OnlyBiasBN
          exclude: true
      - filter:
          _target_: src.optim.filter.OnlyBiasBN
        skip_scale: true
        weight_decay: 0.0          
    lr_scheduler:
      _target_: src.optim.scheduler.LinearWarmUpDecay
      lr: 6e-4
      init_lr: 1e-5
      warmup_steps: 2000
      total_steps: ${trainer.max_steps}
    interval: step    

data:
  train:
    dataset:
      data_dir: /home/ehoffer/Pytorch/nanoGPT/data/openwebtext
      seq_length: 1024
    loader:
      batch_size: ${batch_size}
      num_workers: 8
      pin_memory: true
  val:
    dataset:
      data_dir: ${data.train.dataset.data_dir}
      seq_length: ${data.train.dataset.seq_length}
    loader:
      batch_size: ${batch_size}
      num_workers: 8
      pin_memory: true


callbacks:
  model_checkpoint:
    monitor: "loss/val" 

